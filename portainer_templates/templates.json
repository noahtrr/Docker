{
    "version": "2",
    "templates": [
        {
            "type": 3,
            "title": "RomM",
            "repository": {
                "url": "https://github.com/noahtrr/Docker",
                "stackfile": "Containers/RomM/docker-stack.yml"
            },
            "description": "Scan, enrich, and browse your game collection with a clean and responsive interface. With support for multiple platforms, various naming schemes and custom tags, RomM is a must-have for anyone who plays on emulators.",
            "name": "romm",
            "logo": "https://raw.githubusercontent.com/rommapp/romm/refs/heads/release/.github/resources/isotipo.svg",
            "env": [
                {
                    "name": "MARIADB_ROOT_PASSWORD",
                    "label": "MariaDB Root Password",
                    "default": "MARIADB_ROOT_PASSWORD",
                    "description": "The databases root password. Use a unique, secure password."
                },
                {
                    "name": "MARIADB_DATABASE",
                    "default": "romm-db",
                    "preset": true
                },
                {
                    "name": "MARIADB_USER",
                    "default": "romm-user",
                    "preset": true
                },
                {
                    "name": "DB_PASSWD",
                    "label": "Database password",
                    "description": "The databases password. Use a unique, secure password",
                    "default": "db-password"
                },
                {
                    "name": "DB_HOST",
                    "default": "romm-db",
                    "preset": true
                },
                {
                    "name": "DB_NAME",
                    "default": "romm",
                    "preset": true
                },
                {
                    "name": "DB_USER",
                    "default": "romm-user",
                    "preset": true
                },
                {
                    "name": "DB_PASSWD",
                    "label": "Database Password RomM Entry",
                    "preset": true
                },
                {
                    "name": "ROMM_AUTH_SECRET_KEY",
                    "label": "Auth Secret Key",
                    "description": "Generate a key with `openssl rand -hex 32`",
                    "default": "your generated key"
                },
                {
                    "name": "IGDB_CLIENT_ID",
                    "label": "IGDB Client ID",
                    "description": "Generate an ID and SECRET in IGDB",
                    "default": "client id"
                },
                {
                    "name": "IGDB_CLIENT_SECRET",
                    "label": "IGDB Client Secret",
                    "description": "https://api-docs.igdb.com/#account-creation",
                    "default": "client secret"
                },
                {
                    "name": "MOBYGAMES_API_KEY",
                    "label": "Mobygames API Key",
                    "description": "https://www.mobygames.com/info/api/",
                    "default": "api key"
                },
                {
                    "name": "STEAMGRIDDB_API_KEY",
                    "label": "StreamgridDB API Key",
                    "description": "https://github.com/rommapp/romm/wiki/Generate-API-Keys#steamgriddb",
                    "default": "api key"
                },
                {
                    "name": "PORT",
                    "label": "Port",
                    "description": "The port RomM will be available on.",
                    "default": "8080"
                },
                {
                    "name": "PORT_INTERNAL",
                    "default": "8080",
                    "preset": true
                },
                {
                    "name": "library",
                    "label": "Library Path",
                    "description": "Your game library. Check https://github.com/rommapp/romm?tab=readme-ov-file#folder-structure for more details.",
                    "default": "/path/to/library"
                },
                {
                    "name": "assets",
                    "label": "Asset Path",
                    "description": "Uploaded saves, states, etc.",
                    "default": "/path/to/assets"
                },
                {
                    "name": "config",
                    "label": "Config Path",
                    "description": "Path where config.yml is stored.",
                    "default": "/path/to/config"
                }
            ],
            "categories": ["Games", "Organizing"],
            "note": "<a href='https://github.com/rommapp/romm/' target='_blank' rel='noopener noreferrer'>The RomM Project on GitHub</a>"
        },
        {
            "type": 1,
            "title": "RomM-Comm",
            "description": "A Discord bot that integrates with the RomM API to provide information about your ROM collection and conrol RomM from Discord.",
            "image": "idiosync000/romm-comm:latest",
            "name": "romm-comm",
            "logo": "https://romm.app/_ipx/q_80/images/blocks/logos/romm-mono-dark.svg",
            "env": [
                {
                    "name": "TOKEN",
                    "label": "Token",
                    "description": "Your Discord bot token",
                    "default": "your_discord_bot_token"
                },
                {
                    "name": "GUILD",
                    "label": "Guild ID",
                    "description": "Discord server (guild) ID",
                    "default": "your_guild_id"
                },
                {
                    "name": "API_URL",
                    "label": "Base URL for RomM Instance",
                    "description": "Base URL for local Romm instance (http://ip:port)",
                    "default": "your_api_base_url"
                },
                {
                    "name": "USER",
                    "label": "User",
                    "description": "API authentication username",
                    "default": "api_username"
                },
                {
                    "name": "PASS",
                    "label": "Pass",
                    "description": "API authentication password",
                    "default": "api_password"
                },
                {
                    "name": "DOMAIN",
                    "label": "Domain",
                    "description": "Website domain for any download links, can use local ip/port if not exposing RomM to the internet (default: 'No website configured')",
                    "default": "your_website_domain"
                },
                {
                    "name": "SYNC_RATE",
                    "label": "Sync rate",
                    "description": "How often to sync with API in seconds (default: 3600)",
                    "default": "3600"
                },
                {
                    "name": "REQUESTS_ENABLED",
                    "label": "Requests enabled",
                    "description": "Enable request commands (default: true)",
                    "select": [
                        {
                            "text": "True",
                            "value": "true",
                            "default": true
                        },
                        {
                            "text": "False",
                            "value": "false",
                            "default": false
                        }
                    ]
                },
                {
                    "name": "IGDB_CLIENT_ID",
                    "label": "IGDB client ID",
                    "description": "IGDB login info for requests metadata (can be the same one used in RomM)",
                    "default": "your_client_id"
                },
                {
                    "name": "IGDB_CLIENT_SECRET",
                    "label": "IGDB client secret",
                    "description": "IGDB login info for requests metadata (can be the same one used in RomM)",
                    "default": "your_client_secret"
                },
                {
                    "name": "ENABLE_USER_MANAGER",
                    "label": "Enable user manager",
                    "description": "Enables user manager module (default: true)",
                    "select": [
                        {
                            "text": "True",
                            "value": "true",
                            "default": true
                        },
                        {
                            "text": "False",
                            "value": "false",
                            "default": false
                        }
                    ]
                },
                {
                    "name": "AUTO_REGISTER_ROLE_ID",
                    "label": "Auto register role ID",
                    "description": "Discord role ID used for linking Discord users to RomM users and registering new RomM users if granted to Discord user (if user manager enabled)",
                    "default": "romm_users_role_id"
                },
                {
                    "name": "UPDATE_VOICE_NAMES",
                    "label": "Update voice names",
                    "description": "Enable/disable voice channel stats (default: true)",
                    "select": [
                        {
                            "text": "True",
                            "value": "true",
                            "default": true
                        },
                        {
                            "text": "False",
                            "value": "false",
                            "default": false
                        }
                    ]
                },
                {
                    "name": "CHANNEL_ID",
                    "label": "Channel ID",
                    "description": "Channel ID for API sync result and user manager notifications to be sent to (if enabled above) and user manager log messages",
                    "default": "your_channel_id"
                },
                {
                    "name": "SHOW_API_SUCCESS",
                    "label": "Show API Success",
                    "description": "Show API sync results and error messages in Discord (default: false)",
                    "select": [
                        {
                            "text": "True",
                            "value": "true",
                            "default": false
                        },
                        {
                            "text": "False",
                            "value": "false",
                            "default": true
                        }
                    ]
                },
                {
                    "name": "CACHE_TTL",
                    "label": "Cache Time To Live",
                    "description": "Cache time-to-live in seconds (default: 3900)",
                    "default": "3900"
                },
                {
                    "name": "API_TIMEOUT",
                    "label": "API Timeout",
                    "description": "API request timeout in seconds (default: 10)",
                    "default": "10"
                }
            ],
            "volumes": [
                {
                    "container": "/app/data",
                    "bind": "/"
                }
            ],
            "restart_policy": "unless-stopped",
            "hostname": "romm-comm",
            "note": "<a href='https://github.com/idio-sync/romm-comm/' target='_blank' rel='noopener noreferrer'>Link to the RomM Comm Project </a>",
            "categories": ["Games", "Discord"]
        },
        {
            "type": 1,
            "title": "Nginx Proxy Manager",
            "description": "Expose web services on your network · Free SSL with Let's Encrypt · Designed with security in mind · Perfect for home networks",
            "image": "jc21/nginx-proxy-manager:latest",
            "name": "nginx-proxy-manager",
            "logo": "https://nginxproxymanager.com/logo.svg",
            "volumes": [
                {
                    "container": "/data",
                    "bind": "/"
                },
                {
                    "container": "/etc/letsencrypt",
                    "bind": "/"
                }
            ],
            "ports": ["80:80/tcp", "443:443/tcp", "81:81/tcp"],
            "restart_policy": "unless-stopped",
            "hostname": "nginx-proxy-manager",
            "note": "<a href='https://github.com/NginxProxyManager/nginx-proxy-manager' target='_blank' rel='noopener noreferrer'>Link to the NPM Project </a>",
            "categories": ["Networking", "Proxy"]
        },
        {
            "type": 1,
            "title": "Uptime Kuma",
            "description": "A self-hosted monitoring tool",
            "image": "louislam/uptime-kuma:1",
            "name": "uptime-kuma",
            "logo": "https://uptime.kuma.pet/img/icon.svg",
            "volumes": [
                {
                    "container": "/app/data"
                }
            ],
            "ports": ["3001:3001/tcp"],
            "restart_policy": "always",
            "hostname": "uptime-kuma",
            "note": "<a href='https://github.com/louislam/uptime-kuma' target='_blank' rel='noopener noreferrer'>Link to the Uptime Kuma Project </a>",
            "categories": ["Networking", "Monitoring"]
        },
        {
            "type": 1,
            "title": "Vaultwarden",
            "description": "An alternative server implementation of the Bitwarden Client API, written in Rust and compatible with official Bitwarden clients.",
            "image": "vaultwarden/server:latest",
            "name": "vaultwarden",
            "logo": "https://github.com/dani-garcia/vaultwarden/raw/main/resources/vaultwarden-logo-auto.svg",
            "env": [
                {
                    "name": "DOMAIN",
                    "label": "Domain",
                    "description": "Your Vaultwardens FQDN",
                    "default": "https://vw.domain.tld"
                }
            ],
            "volumes": [
                {
                    "container": "/data/",
                    "binds": "/"
                }
            ],
            "ports": ["85:80/tcp"],
            "restart_policy": "unless-stopped",
            "hostname": "vaultwarden",
            "note": "<a href='https://github.com/dani-garcia/vaultwarden' target='_blank' rel='noopener noreferrer'>Link to the Vaultwarden Project </a>",
            "categories": ["Security", "Organizing"]
        }
    ]
}